#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and filtile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.
# ---- Configuration ----
riverctl default-attach-mode bottom
riverctl focus-follows-cursor always
riverctl set-cursor-warp on-focus-change
riverctl hide-cursor when-typing disabled

# ---- Monitor ----
riverctl spawn kanshi

# ---- Autostart ----
riverctl spawn "foot --server"
riverctl spawn pipewire
riverctl spawn swww-daemon
riverctl spawn nm-applet
riverctl spawn "waybar -c /home/clem/.config/waybar/config.jsonc -s /home/clem/.config/waybar/style.css"
riverctl spawn mako
riverctl spawn "/usr/libexec/polkit-mate-authentication-agent-1"

# Super+Shift+Return to start an instance of foot (https://codeberg.org/dnkl/foot)
riverctl map normal Super+Shift Return spawn footclient
riverctl map normal Super P spawn launch-tofi
riverctl map normal Super X spawn keyboardswitcher.sh
riverctl map normal Super A spawn bluetooth.sh
riverctl map normal Super D spawn code
riverctl map normal Super F1 spawn lock.sh
riverctl map normal Super F4 spawn powermenu.sh
riverctl map normal Super Q spawn chromium
riverctl map normal Super Z spawn pdf-reader.sh
riverctl map normal Super E spawn nemo
riverctl map normal Super W spawn pavucontrol
riverctl map normal Super+Shift A spawn 'grim -g "$(slurp)" - | swappy -f -'
riverctl xcursor-theme Adwaita
riverctl spawn 'gsettings set org.gnome.desktop.interface cursor-theme Adwaita'
riverctl spawn 'gsettings set org.gnome.desktop.interface cursor-size 11'

# Super+Q to close the focused view
riverctl map normal Super+Shift C close

# Super+Shift+E to exit river
riverctl map normal Super+Shift Q exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super Return zoom

# Super+H and Super+L to decrease/increase the main ratio of filtile(1)
riverctl map normal Super H send-layout-cmd filtile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd filtile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of filtile(1)
riverctl map normal Super+Shift H send-layout-cmd filtile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd filtile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up    send-layout-cmd filtile "main-location top"
riverctl map normal Super Right send-layout-cmd filtile "main-location right"
riverctl map normal Super Down  send-layout-cmd filtile "main-location bottom"
riverctl map normal Super Left  send-layout-cmd filtile "main-location left"

# Super+{Shift to decrease}+{O,I} outer and inner gaps respectively
riverctl map normal Super O  send-layout-cmd filtile "outer-padding +1"
riverctl map normal Super+Shift O  send-layout-cmd filtile "outer-padding -1"
riverctl map normal Super I  send-layout-cmd filtile "view-padding +1"
riverctl map normal Super+Shift I  send-layout-cmd filtile "view-padding -1"
riverctl map normal Super U  send-layout-cmd filtile "smart-padding +1"
riverctl map normal Super+Shift U  send-layout-cmd filtile "smart-padding -1"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ +5%'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ -5%'
    riverctl map $mode None XF86AudioMute         spawn 'pactl set-sink-mute @DEFAULT_SINK@ toggle'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'xbacklight -inc 5 &&  xbacklight -get | while read OUTPUT; do notify-send --app-name "Brightness" "$OUTPUT%"; done'
    riverctl map $mode None XF86MonBrightnessDown spawn 'xbacklight -dec 5 &&  xbacklight -get | while read OUTPUT; do notify-send --app-name "Brightness" "$OUTPUT%"; done'

done
# The scratchpad will live on an unused tag. Which tags are used depends on your
# config, but rivers default uses the first 9 tags.
scratch_tag=$((1 << 20 ))

# Toggle the scratchpad with Super+P
riverctl map normal Super S toggle-focused-tags ${scratch_tag}

# Send windows to the scratchpad with Super+Shift+P
riverctl map normal Super+Shift S set-view-tags ${scratch_tag}

# Set spawn tagmask to ensure new windows don't have the scratchpad tag unless
# explicitly set.
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

# Set background and border color
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# Set the default layout generator to be filtile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout filtile

filtile \
    --output HDMI-A-1 smart-padding 2, \
    --output HDMI-A-1 outer-padding 2, \
    --output HDMI-A-1 inner-padding 2, \
    --output eDP-1 outer-padding 2, \
    --output eDP-1 inner-padding 2, \
    --output eDP-1 smart-padding 2 &
