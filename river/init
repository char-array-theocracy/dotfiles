#!/bin/bash

# ---- Configuration ----
riverctl default-attach-mode bottom
riverctl focus-follows-cursor always
riverctl set-cursor-warp on-focus-change
riverctl hide-cursor when-typing disabled

# ---- Monitor ----
riverctl spawn kanshi

# ---- Autostart ----
riverctl spawn "foot --server"
riverctl spawn pipewire
riverctl spawn swww-daemon
riverctl spawn nm-applet
riverctl spawn mako
riverctl spawn "/usr/libexec/polkit-mate-authentication-agent-1"

# Applications Keybindings
riverctl map normal Super+Shift Return spawn footclient
riverctl map normal Super Q spawn systemInfo.sh
riverctl map normal Super P spawn launch-tofi
riverctl map normal Super X spawn keyboardswitcher.sh
riverctl map normal Super A spawn bluetooth.sh
riverctl map normal Super D spawn code
riverctl map normal Super F1 spawn swaylock
riverctl map normal Super F4 spawn powermenu.sh
riverctl map normal Super C spawn chromium
riverctl map normal Super Z spawn pdf-reader.sh
riverctl map normal Super E spawn nemo  
riverctl map normal Super+Shift A spawn 'grim -g "$(slurp)" - | swappy -f -'
riverctl map normal Super + V spawn virt-manager --connect qemu:///system --show win11

# Cursor Theme
riverctl xcursor-theme Adwaita
riverctl spawn 'gsettings set org.gnome.desktop.interface cursor-theme Adwaita'
riverctl spawn 'gsettings set org.gnome.desktop.interface cursor-size 11'

# Window Management Keybindings

# Close focused view
riverctl map normal Super+Shift C close

# Exit river
riverctl map normal Super+Shift Q exit

# Focus next/previous view
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Swap with next/previous view
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Focus next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Send focused view to next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Bump focused view to top
riverctl map normal Super Return zoom

# Adjust main ratio (filtile)
riverctl map normal Super H send-layout-cmd filtile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd filtile "main-ratio +0.05"

# Adjust main count (filtile)
riverctl map normal Super+Shift H send-layout-cmd filtile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd filtile "main-count -1"

# Move views
riverctl map normal Super+Alt H move left 100
riverctl map normal Super+Alt J move down 100
riverctl map normal Super+Alt K move up 100
riverctl map normal Super+Alt L move right 100

# Snap views to screen edges
riverctl map normal Super+Alt+Control H snap left
riverctl map normal Super+Alt+Control J snap down
riverctl map normal Super+Alt+Control K snap up
riverctl map normal Super+Alt+Control L snap right

# Resize views
riverctl map normal Super+Alt+Shift H resize horizontal -100
riverctl map normal Super+Alt+Shift J resize vertical 100
riverctl map normal Super+Alt+Shift K resize vertical -100
riverctl map normal Super+Alt+Shift L resize horizontal 100

# Mouse bindings
riverctl map-pointer normal Super BTN_LEFT move-view
riverctl map-pointer normal Super BTN_RIGHT resize-view
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

# ---- Tag Keybindings ----

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Focus all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal Super 0 set-focused-tags $all_tags
riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Toggle float
riverctl map normal Super Space toggle-float

# Toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Change layout orientation
riverctl map normal Super Up    send-layout-cmd filtile "main-location top"
riverctl map normal Super Right send-layout-cmd filtile "main-location right"
riverctl map normal Super Down  send-layout-cmd filtile "main-location bottom"
riverctl map normal Super Left  send-layout-cmd filtile "main-location left"

# Adjust gaps (filtile)
riverctl map normal Super O          send-layout-cmd filtile "outer-padding +1"
riverctl map normal Super+Shift O    send-layout-cmd filtile "outer-padding -1"
riverctl map normal Super I          send-layout-cmd filtile "view-padding +1"
riverctl map normal Super+Shift I    send-layout-cmd filtile "view-padding -1"
riverctl map normal Super U          send-layout-cmd filtile "smart-padding +1"
riverctl map normal Super+Shift U    send-layout-cmd filtile "smart-padding -1"

# ---- Passthrough Mode ----

# Declare passthrough mode
riverctl declare-mode passthrough

# Enter/Exit passthrough mode
riverctl map normal      Super F11 enter-mode passthrough
riverctl map passthrough Super F11 enter-mode normal

# ---- Media Keys ----

for mode in normal locked
do
    # Eject optical drive
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Audio controls
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ +5%'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pactl set-sink-volume @DEFAULT_SINK@ -5%'
    riverctl map $mode None XF86AudioMute         spawn 'pactl set-sink-mute @DEFAULT_SINK@ toggle'

    # Media playback controls
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Screen brightness controls
    riverctl map $mode None XF86MonBrightnessUp   spawn 'xbacklight -inc 5 && xbacklight -get | while read OUTPUT; do notify-send --app-name "Brightness" "$OUTPUT%"; done'
    riverctl map $mode None XF86MonBrightnessDown spawn 'xbacklight -dec 5 && xbacklight -get | while read OUTPUT; do notify-send --app-name "Brightness" "$OUTPUT%"; done'
done

# ---- Scratchpad ----

scratch_tag=$((1 << 20))

# Toggle the scratchpad with Super+S
riverctl map normal Super S toggle-focused-tags ${scratch_tag}

# Send windows to the scratchpad with Super+Shift+S
riverctl map normal Super+Shift S set-view-tags ${scratch_tag}

# Set spawn tagmask to ensure new windows don't have the scratchpad tag
all_but_scratch_tag=$(( ((1 << 32) - 1) ^ $scratch_tag ))
riverctl spawn-tagmask ${all_but_scratch_tag}

# ---- Appearance ----

# Set background and border colors
riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

# Set keyboard repeat rate
riverctl set-repeat 50 300

# ---- Rules ----

# Example rules (modify as needed)
# riverctl rule-add -app-id 'float*' -title 'foo' float
# riverctl rule-add -app-id "bar" csd

# ---- Layout ----

# Set all smart padding to 0
for output in $(riverctl list-outputs | awk '{print $1}'); do
    for tag in $(seq 1 9); do
        riverctl send-layout-cmd "$output:$tag" filtile "smart-padding 0"
    done
done

# Set the default layout generator to filtile and start it
riverctl default-layout filtile

filtile &

for output in HDMI-A-1 eDP-1; do
    for tag in $(seq 1 9); do
        riverctl send-layout-cmd filtile "--output $output --tags $tag outer-padding 0"
        riverctl send-layout-cmd filtile "--output $output --tags $tag smart-padding 0"
        riverctl send-layout-cmd filtile "--output $output --tags $tag inner-padding 0"
    done
done

